package Vista.Forms;

import Controlador.ControladorMuestra;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.util.List;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Controlador.EventListener;
import Controlador.EventManager;
import Modelo.Entidad.Muestra;
import Modelo.Entidad.Signatario;
import Modelo.Entidad.Sitio;
import Modelo.Repositorio.Conector;
import Modelo.Repositorio.RepositorioSignatarios;
import Modelo.Repositorio.RepositorioSitio;
import Vista.Extras.VentanaUtils;
import Vista.Extras.FechaTF;
import Vista.Extras.HoraTF;

import java.sql.SQLException;
import java.time.DateTimeException;
import java.time.LocalTime;

public class BuscadorMuestras extends javax.swing.JFrame implements EventListener {
    private static BuscadorMuestras instancia;
    private VentanaUtils utils;

    public static final int MODO_VISTA = 0;
    public static final int MODO_BUSQUEDA = 1;
    public static final int MODO_GESTION = 2;
    public static final String EVENTO_BUSQUEDA = "muestras-ebusqueda";

    Long muestreadorCambio;
    Long sitioCambio;
    List<Muestra> ultimaLista;
    List<Muestra> listaEmpty = new ArrayList<>();
    ControladorMuestra muestraCtl = new ControladorMuestra();
    RepositorioSignatarios repoSig = new RepositorioSignatarios();
    RepositorioSitio repoSit = new RepositorioSitio();
    EventManager eventos = new EventManager(EVENTO_BUSQUEDA);
    
    private Muestra muestra;
    private boolean agregando;

    public static BuscadorMuestras getInstancia(){
        if(BuscadorMuestras.instancia == null){
            BuscadorMuestras.instancia = new BuscadorMuestras();
        }
        
        return BuscadorMuestras.instancia;
    } 

    private BuscadorMuestras() {
        initComponents();
        this.utils = new VentanaUtils(this);
        BuscadorSitios.getInstancia().subscribe(this);
        BuscadorSignatarios.getInstancia().subscribe(this);
    }

    public void subscribe(EventListener listener) {
        eventos.subscribe(EVENTO_BUSQUEDA, listener);
    }

    public void unsubscribe(EventListener listener) {
        eventos.unsubscribe(EVENTO_BUSQUEDA, listener);
    }
    
    @Override
    public void update(String eventType, Object obj) {
        switch (eventType) {
            case BuscadorSitios.EVENTO_BUSQUEDA:
                Sitio sit = (Sitio)obj;
                this.sitioCambio = sit.idLugar;
                this.gSitioLbl.setText("Sitio: "+sit.clave);
                break;
            case BuscadorSignatarios.EVENTO_BUSQUEDA:
                Signatario s = (Signatario)obj;
                this.muestreadorCambio = s.idSignatario;
                this.gMuestreadorLbl.setText("Muestreador: "+s.getNombreCompleto());
                break;
            default:
                throw new AssertionError();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        numCTF = new javax.swing.JTextField();
        proyectoTF = new javax.swing.JTextField();
        fmTF = new FechaTF();
        frTF = new FechaTF();
        jScrollPane4 = new javax.swing.JScrollPane();
        muestrasTb = new javax.swing.JTable();
        buscarBtn3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        aceptarBtn = new javax.swing.JButton();
        hmTF = new HoraTF();
        jLabel6 = new javax.swing.JLabel();
        gNumCLbl = new javax.swing.JLabel();
        gNumCTF = new javax.swing.JTextField();
        gProyectoLbl = new javax.swing.JLabel();
        gProyTF = new javax.swing.JTextField();
        gFMuestreoTF = new Vista.Extras.FechaTF();
        gHMuestreoLbl = new javax.swing.JLabel();
        gFRecepcionLbl = new javax.swing.JLabel();
        gFRecepcionTF = new Vista.Extras.FechaTF();
        gHoraTF = new Vista.Extras.HoraTF();
        gFMuestreoLbl = new javax.swing.JLabel();
        buscarMuestreadorBtn = new javax.swing.JButton();
        buscarSitioBtn = new javax.swing.JButton();
        gSitioLbl = new javax.swing.JLabel();
        gMuestreadorLbl = new javax.swing.JLabel();
        gAceptarBtn = new javax.swing.JButton();
        nuevoBtn = new javax.swing.JButton();
        eliminarBtn = new javax.swing.JButton();

        jPanel4.setBackground(new java.awt.Color(153, 153, 255));

        muestrasTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num. C.", "Proyecto", "F. Muestreo", "F. Recepción", "Muestreador"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        muestrasTb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                muestrasTbMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(muestrasTb);
        if (muestrasTb.getColumnModel().getColumnCount() > 0) {
            muestrasTb.getColumnModel().getColumn(4).setResizable(false);
        }

        buscarBtn3.setText("Buscar");
        buscarBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtn3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Proyecto");

        jLabel2.setText("Numero de Control");

        jLabel4.setText("Fecha de Recepción");

        jLabel5.setText("Fecha Muestreo");

        aceptarBtn.setText("Aceptar");
        aceptarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Hora Muestreo (formato 24hrs)");

        gNumCLbl.setText("Número de control");

        gProyectoLbl.setText("Proyecto");

        gHMuestreoLbl.setText("Hora muestreo");

        gFRecepcionLbl.setText("Fecha Recepción");

        gFMuestreoLbl.setText("Fecha Muestreo");

        buscarMuestreadorBtn.setText("Buscar");
        buscarMuestreadorBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarMuestreadorBtnMouseClicked(evt);
            }
        });

        buscarSitioBtn.setText("Buscar");
        buscarSitioBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarSitioBtnMouseClicked(evt);
            }
        });

        gSitioLbl.setText("Sitio: [Ninguno]");

        gMuestreadorLbl.setText("Muestreador: [Ninguno]");

        gAceptarBtn.setText("Aceptar");
        gAceptarBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gAceptarBtnMouseClicked(evt);
            }
        });

        nuevoBtn.setText("Nuevo");
        nuevoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nuevoBtnMouseClicked(evt);
            }
        });

        eliminarBtn.setText("Eliminar");
        eliminarBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminarBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hmTF, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buscarBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aceptarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numCTF, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(proyectoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fmTF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(frTF)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gFRecepcionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(gFRecepcionLbl)))
                                .addGap(0, 149, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(gSitioLbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(gMuestreadorLbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buscarMuestreadorBtn)
                                    .addComponent(buscarSitioBtn))
                                .addGap(16, 16, 16))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(130, 130, 130)
                                        .addComponent(gAceptarBtn))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(gNumCLbl)
                                            .addComponent(gNumCTF)
                                            .addComponent(gProyectoLbl)
                                            .addComponent(gProyTF)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                                        .addComponent(gFMuestreoLbl)
                                                        .addGap(44, 44, 44))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                                        .addComponent(gFMuestreoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(gHMuestreoLbl)
                                                    .addComponent(gHoraTF, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(nuevoBtn)
                .addGap(65, 65, 65)
                .addComponent(eliminarBtn)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proyectoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarBtn3)
                    .addComponent(aceptarBtn)
                    .addComponent(hmTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(gNumCLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gNumCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gProyectoLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gProyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gHMuestreoLbl)
                            .addComponent(gFMuestreoLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gHoraTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gFMuestreoTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(gFRecepcionLbl)
                        .addGap(4, 4, 4)
                        .addComponent(gFRecepcionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gMuestreadorLbl)
                            .addComponent(buscarMuestreadorBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gSitioLbl)
                            .addComponent(buscarSitioBtn))
                        .addGap(16, 16, 16)
                        .addComponent(gAceptarBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nuevoBtn)
                    .addComponent(eliminarBtn))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void muestrasTbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_muestrasTbMouseClicked
        this.agregando = false;
        this.sitioCambio = null;
        int index = this.muestrasTb.getSelectedRow();
        if(index == -1) return;
        
        muestra = ultimaLista.get(index);
        gNumCTF.setText(muestra.numControl);
        gFMuestreoTF.setText(muestra.fMuestreo.toString());
        gFRecepcionTF.setText(muestra.fRecepcion.toString());
        gHoraTF.setText(muestra.hMuestreo.toString());
        gProyTF.setText(muestra.proyecto);
        try {
            Signatario s = repoSig.searchBy(muestra.muestreador);
            gMuestreadorLbl.setText(
                "Muestreador: "+ (s != null ? s.getNombreCompleto() : "[Ninguno]")
            );
            
            Sitio sit = repoSit.getById(muestra.idSitio);
            gSitioLbl.setText(
                "Sitio: "+(sit != null ? sit.clave : "[Ninguno]")
            );
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                null,
                "Error: "+e.toString(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
    }//GEN-LAST:event_muestrasTbMouseClicked

    private void buscarMuestreadorBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMuestreadorBtnMouseClicked
        if(!agregando && this.muestrasTb.getSelectedRow() == -1) return;
        BuscadorSignatarios b = BuscadorSignatarios.getInstancia();
        b.buscar();
        b.setVisible(true);
    }//GEN-LAST:event_buscarMuestreadorBtnMouseClicked

    private void buscarSitioBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarSitioBtnMouseClicked
        if(!agregando && this.muestrasTb.getSelectedRow() == -1) return;
        BuscadorSitios b = BuscadorSitios.getInstancia();
        b.preparar(BuscadorSitios.MODO_BUSQUEDA);
        b.setVisible(true);
    }//GEN-LAST:event_buscarSitioBtnMouseClicked

    private void gAceptarBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gAceptarBtnMouseClicked
        try {
            Muestra m = new Muestra();
            m.fMuestreo = gFMuestreoTF.getDate();
            m.hMuestreo = gHoraTF.getHour();
            m.fRecepcion = gFRecepcionTF.getDate();
            m.numControl = gNumCTF.getText().trim();
            m.proyecto = gProyTF.getText().trim();
            m.muestreador = muestreadorCambio;
            m.idSitio = sitioCambio;
            
            if(agregando){
                muestraCtl.add(m);
            }
            else{
                muestraCtl.modify(m);
            }
            gFMuestreoTF.setText("");
            gHoraTF.setText("");
            gFRecepcionTF.setText("");
            gNumCTF.setText("");
            gProyTF.setText("");
            buscar();
            
        } catch (DateTimeParseException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                null,
                "Formato o fecha u hora no válidos",
                "Error",
                JOptionPane.INFORMATION_MESSAGE);
        } catch(Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                null,
                "Error: "+e.toString(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_gAceptarBtnMouseClicked

    private void nuevoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoBtnMouseClicked
        this.agregando = true;
        this.gNumCTF.setText("Nueva muestra");
        this.gProyTF.setText("");
        this.gFMuestreoTF.setText("");
        this.gHoraTF.setText("");
        this.gFRecepcionTF.setText("");
        this.gMuestreadorLbl.setText("Muestreador: [Ninguno]");
        this.gSitioLbl.setText("Sitio: [Ninguno]");
    }//GEN-LAST:event_nuevoBtnMouseClicked

    private void eliminarBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarBtnMouseClicked
        int index = this.muestrasTb.getSelectedRow();
        if(index == -1) return;
        
        Muestra m = ultimaLista.get(index);
        try {
            muestraCtl.delete(m);
            buscar();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                null,
                "Error: "+e.toString(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_eliminarBtnMouseClicked

    private void aceptarBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_aceptarBtnActionPerformed
        int index = muestrasTb.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(
                    null,
                    "Se debe elegir una muestra",
                    "Error",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        this.setVisible(false);

        Muestra m = ultimaLista.get(index);
        eventos.notify(EVENTO_BUSQUEDA, m);
    }// GEN-LAST:event_aceptarBtnActionPerformed

    private void loadMuestras(List<Muestra> list) throws Exception {
        DefaultTableModel model = new DefaultTableModel(
                new Object[] { "Num. C.", "Proyecto", "F. Muestreo", "H. Muestreo", "F. Recepción", "Muestreador" }, 0);

        for (Muestra m : list) {
            String fecha = m.fMuestreo.getYear() + "-" + m.fMuestreo.getMonthValue() + "-"
                    + m.fMuestreo.getDayOfMonth();
            String hora = m.hMuestreo.getHour() + ":" + m.hMuestreo.getMinute();
            String siglas;
            try {
                siglas = repoSig.getSiglas(m.muestreador);
            } catch (SQLException e) {
                e.printStackTrace();
                siglas = "xxxx";
            }

            Object[] newRow = { m.numControl, m.proyecto, fecha, hora, m.fRecepcion, siglas };
            model.addRow(newRow);
        }

        muestrasTb.setModel(model);
    }
    
    private void buscar(){
        try {
            String numC = numCTF.getText().trim();
            String proj = proyectoTF.getText().trim();
            LocalDate fM = this.fmTF.getDate();
            LocalTime hM = hmTF.getHour();
            LocalDate fR = frTF.getDate();
            ultimaLista = muestraCtl.searchBy(numC, proj, fM, hM, fR);
            loadMuestras(ultimaLista);
        } catch (DateTimeParseException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                    null,
                    "Formato de fecha u hora no válidos",
                    "Error",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (DateTimeException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                    null,
                    "Fecha u Hora no válidos",
                    "Error",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                    null,
                    "Error:" + e.toString(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void buscarBtn3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buscarBtn3ActionPerformed
        buscar();
    }// GEN-LAST:event_buscarBtn3ActionPerformed

    public void preparar() {
        this.muestra = null;
        this.sitioCambio = null;
        this.utils.centrarEnPantalla();
        try {
            ultimaLista = muestraCtl.getAllMuestras();
            loadMuestras(ultimaLista);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                    null,
                    "Error:" + e.toString(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    public void setModo(int tipo_modo) {
        switch (tipo_modo) {
            case BuscadorMuestras.MODO_VISTA:
                this.setSize(580, 580);
                this.aceptarBtn.setVisible(false);
                this.nuevoBtn.setVisible(false);
                this.eliminarBtn.setVisible(false);
                this.gAceptarBtn.setVisible(false);
                this.gFMuestreoTF.setVisible(false);
                this.gFRecepcionTF.setVisible(false);
                this.gHoraTF.setVisible(false);
                this.gNumCTF.setVisible(false);
                this.gProyTF.setVisible(false);
                
                this.gFMuestreoLbl.setVisible(false);
                this.gFRecepcionLbl.setVisible(false);
                this.gHMuestreoLbl.setVisible(false);
                this.gMuestreadorLbl.setVisible(false);
                this.gNumCLbl.setVisible(false);
                this.gProyectoLbl.setVisible(false);
                this.gSitioLbl.setVisible(false);
                break;

            case BuscadorMuestras.MODO_BUSQUEDA:
                this.setSize(580, 580);
                this.aceptarBtn.setVisible(true);
                this.nuevoBtn.setVisible(false);
                this.eliminarBtn.setVisible(false);
                this.gAceptarBtn.setVisible(false);
                this.gFMuestreoTF.setVisible(false);
                this.gFRecepcionTF.setVisible(false);
                this.gHoraTF.setVisible(false);
                this.gNumCTF.setVisible(false);
                this.gProyTF.setVisible(false);
                
                this.gFMuestreoLbl.setVisible(false);
                this.gFRecepcionLbl.setVisible(false);
                this.gHMuestreoLbl.setVisible(false);
                this.gMuestreadorLbl.setVisible(false);
                this.gNumCLbl.setVisible(false);
                this.gProyectoLbl.setVisible(false);
                this.gSitioLbl.setVisible(false);
                break;
            case BuscadorMuestras.MODO_GESTION:
                this.aceptarBtn.setVisible(false);
                this.nuevoBtn.setVisible(true);
                this.eliminarBtn.setVisible(true);
                this.gAceptarBtn.setVisible(true);
                this.gFMuestreoTF.setVisible(true);
                this.gFRecepcionTF.setVisible(true);
                this.gHoraTF.setVisible(true);
                this.gNumCTF.setVisible(true);
                this.gProyTF.setVisible(true);
                
                this.gFMuestreoLbl.setVisible(true);
                this.gFRecepcionLbl.setVisible(true);
                this.gHMuestreoLbl.setVisible(true);
                this.gMuestreadorLbl.setVisible(true);
                this.gNumCLbl.setVisible(true);
                this.gProyectoLbl.setVisible(true);
                this.gSitioLbl.setVisible(true);
            default:
                break;
        }
    }

    public void preparar(int tipo_modo){
        this.setModo(tipo_modo);
        this.preparar();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarBtn;
    private javax.swing.JButton buscarBtn3;
    private javax.swing.JButton buscarMuestreadorBtn;
    private javax.swing.JButton buscarSitioBtn;
    private javax.swing.JButton eliminarBtn;
    private FechaTF fmTF;
    private FechaTF frTF;
    private javax.swing.JButton gAceptarBtn;
    private javax.swing.JLabel gFMuestreoLbl;
    private Vista.Extras.FechaTF gFMuestreoTF;
    private javax.swing.JLabel gFRecepcionLbl;
    private Vista.Extras.FechaTF gFRecepcionTF;
    private javax.swing.JLabel gHMuestreoLbl;
    private Vista.Extras.HoraTF gHoraTF;
    private javax.swing.JLabel gMuestreadorLbl;
    private javax.swing.JLabel gNumCLbl;
    private javax.swing.JTextField gNumCTF;
    private javax.swing.JTextField gProyTF;
    private javax.swing.JLabel gProyectoLbl;
    private javax.swing.JLabel gSitioLbl;
    private HoraTF hmTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable muestrasTb;
    private javax.swing.JButton nuevoBtn;
    private javax.swing.JTextField numCTF;
    private javax.swing.JTextField proyectoTF;
    // End of variables declaration//GEN-END:variables
       public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PruebasVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PruebasVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PruebasVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PruebasVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Conector.login("rubenor", "");
                    var a = new BuscadorMuestras();
                    
                    a.preparar(BuscadorMuestras.MODO_GESTION);
                    a.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
                    a.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                
            }
        });
    }
}
